// ====================================================================================================================
// AgriCraft Buildscript
// --------------------------------------------------------------------------------------------------------------------
// Now without QuikMod.
// ====================================================================================================================

// --------------------------------------------------------------------------------------------------------------------
// Buildscript Dependencies
// --------------------------------------------------------------------------------------------------------------------

buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
    }
}

// --------------------------------------------------------------------------------------------------------------------
// ForgeGradle Plugin
// --------------------------------------------------------------------------------------------------------------------
apply plugin: 'net.minecraftforge.gradle'

// --------------------------------------------------------------------------------------------------------------------
// Buildscript Plugins
// --------------------------------------------------------------------------------------------------------------------
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'jacoco'
apply plugin: 'maven-publish'

// --------------------------------------------------------------------------------------------------------------------
// Mod Properties
// --------------------------------------------------------------------------------------------------------------------

// Load Mod Properties
ext.configFile = file('mod.properties')
ext.config = parseConfig(configFile)

// Mod Properties Transcription
version = "${config.version_minecraft}-${config.version_major}.${config.version_minor}.${config.version_patch}"
group = "${config.package}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${config.id}"

// Set the source and target compatibility levels.
// Required for eclipse task generates correctly.
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = "${config.version_java}"

// Mod Properties Loader
def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}

// --------------------------------------------------------------------------------------------------------------------
// Minecraft Task
// --------------------------------------------------------------------------------------------------------------------
minecraft {
 mappings channel: "${config.mapping_channel}", version: "${config.mapping_version}"
    runs {
        client {
            workingDirectory project.file('run')
            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'REGISTRIES'
            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            // Make mixins work on dependencies
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                agricraft {
                    source sourceSets.main
                }
                infinitylib {
                    //This still grabs the sourceSets from the main project, therefore one must manually correct it in runServer afterwards
                    source project("InfinityLib").sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'REGISTRIES'
            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            // Make mixins work on dependencies
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                agricraft {
                    source sourceSets.main
                }
                infinitylib {
                    //This still grabs the sourceSets from the main project, therefore one must manually correct it in runServer afterwards
                    source project("InfinityLib").sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'agricraft', '--all',
                '--input', file('lib/AgriPlants'),
                '--existing', file('src/main/resources/'),
                '--existing', project("InfinityLib").file('src/main/resources/'),
                '--output', file('src/generated/resources/')

            mods {
                agricraft {
                    source sourceSets.main
                }
                infinitylib {
                    //This still grabs the sourceSets from the main project, therefore one must manually correct it in runServer afterwards
                    source project("InfinityLib").sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        // for any curseforge mod
        url "https://cursemaven.com"
    }

    maven {
        // for JEI
        url "https://dvs1.progwml6.com/files/maven"
    }

    maven {
        // for TOP
        name 'tterrag maven'
        url "https://maven.tterrag.com/"
    }

    maven {
        // for Botania and Botany pots
        url 'https://maven.blamejared.com'
    }

    maven {
        // for Immersive Engineering
        url "https://modmaven.dev/"
        content {
            includeGroup 'blusunrize.immersiveengineering'
            includeGroup 'malte0811'
        }
    }

    maven {
        // for Simply Seasons
        url 'https://maven.joshiejack.uk/'
    }

    // For AgriCore dependencies
    mavenCentral()
}


// Add "embedded" configuration
configurations {
    embed
    compile.extendsFrom(embed)
}

// List Deps.
dependencies {
    // Minecraft
    minecraft "net.minecraftforge:forge:${config.version_minecraft}-${config.version_forge}"

    // AgriCore
    embed project('AgriCore');
    
    // InfinityLib
    compile project('InfinityLib')

    //JEI
    compileOnly fg.deobf("mezz.jei:jei-1.16.5:7.7.0.106:api")
    runtimeOnly fg.deobf("mezz.jei:jei-1.16.5:7.7.0.106")

    //TOP
    compileOnly fg.deobf("mcjty.theoneprobe:TheOneProbe-1.16:1.16-3.1.4-22")
    runtimeOnly fg.deobf("mcjty.theoneprobe:TheOneProbe-1.16:1.16-3.1.4-22")

    //Better Weather
    compileOnly fg.deobf("curse.maven:better_weather-400714:3248339")
    //runtimeOnly fg.deobf("curse.maven:better_weather-400714:3248339")

    //Blood Magic
    compileOnly fg.deobf("curse.maven:blood_magic-224791:3184485")
    //runtimeOnly fg.deobf("curse.maven:blood_magic-224791:3184485")

    //Botania
    compileOnly fg.deobf("vazkii.botania:Botania:1.16.5-417-SNAPSHOT:api")
    //runtimeOnly fg.deobf("vazkii.botania:Botania:1.16.5-417-SNAPSHOT")

    //Botany pots
    compileOnly fg.deobf("net.darkhax.botanybots:BotanyPots-1.16.5:7.1.20")
    compileOnly fg.deobf("net.darkhax.bookshelf:Bookshelf-1.16.5:10.1.12")   //Botany Pots runtime dependency
    //runtimeOnly fg.deobf("net.darkhax.botanybots:BotanyPots-1.16.5:7.1.20")
    //runtimeOnly fg.deobf("net.darkhax.bookshelf:Bookshelf-1.16.5:10.1.12")   //Botany Pots runtime dependency

    //Create
    compileOnly fg.deobf("curse.maven:create-328085:3278516")
    //runtimeOnly fg.deobf("curse.maven:create-328085:3278516")

    //Cyclic
    compileOnly fg.deobf("curse.maven:cyclic-239286:3321623")
    //runtimeOnly fg.deobf("curse.maven:cyclic-239286:3321623")

    //Immersive Engineering
    compileOnly fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:1.16.5-5.0.0-135")
    //runtimeOnly fg.deobf("blusunrize.immersiveengineering:ImmersiveEngineering:1.16.5-5.0.0-135")

    //Industrial Foregoing
    compileOnly fg.deobf("curse.maven:industrial_foregoing-266515:3261176")
    //runtimeOnly fg.deobf("curse.maven:industrial_foregoing-266515:3261176")

    //Jade
    compileOnly fg.deobf("curse.maven:jade-324717:3302544")
    //runtimeOnly fg.deobf("curse.maven:jade-324717:3302544")

    //Mystical Agriculture
    compileOnly fg.deobf("curse.maven:mystical_agriculture_api-246640:3359340")
    //runtimeOnly fg.deobf("curse.maven:mystical_agriculture-246640:3398788")
    //runtimeOnly fg.deobf("curse.maven:cucumber-272335:3349690")   //Mystical Agriculture runtime dependency

    //Serene Seasons
    compileOnly fg.deobf("curse.maven:serene_seasons-291874:3202233")
    //runtimeOnly fg.deobf("curse.maven:serene_seasons-291874:3202233")

    //Simply Seasons
    compileOnly fg.deobf("uk.joshiejack.penguinlib:Penguin-Lib:1.16.5-0.3.0-12")   //Simply Seasons runtime dependency
    compileOnly fg.deobf("uk.joshiejack.simplyseasons:Simply-Seasons:1.16.5-1.0.0-8")
    //runtimeOnly fg.deobf("uk.joshiejack.penguinlib:Penguin-Lib:1.16.5-0.3.0-12")   //Simply Seasons runtime dependency
    //runtimeOnly fg.deobf("uk.joshiejack.simplyseasons:Simply-Seasons:1.16.5-1.0.0-8")

    //Straw Golems
    compileOnly fg.deobf("curse.maven:straw_golem_reborn-387580:3057272")
    //runtimeOnly fg.deobf("curse.maven:straw_golem_reborn-387580:3057272")
}

// Delete Old Plants
task deleteOldJsons(type: Delete) {
    delete "run/config/agricraft/json"
}

processResources {
	// Add AgriPlants
    from('lib/AgriPlants') {
        include '**/*.json'
        into 'json/defaults'
    }
    outputs.upToDateWhen{ false }
	
	// make sure to include mods.toml from the main mod
    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'

        // replace version and mcversion
        expand 'version': project.version
    }

    // from the main mod, copy everything else, that's not the mods.toml
    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml', '**/psd/**'
    }
}

jar {
    // Manifest
    manifest {
        attributes([
                "Specification-Title"     : "${config.id}",
                "Specification-Vendor"    : "${config.author}",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : "${config.name}",
                "Implementation-Version"  : "${config.version_major}.${config.version_minor}.${config.version_patch}",
                "Implementation-Vendor"   : "${config.author}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    // Fix Shading
    configurations.embed.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
            exclude 'com/google', 'com/google/**'
            exclude 'net/jcip', 'net/jcip/**'
            exclude 'edu/umd', 'edu/umd/**'
            exclude 'javax/annotation', 'javax/annotation/**'
        }
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.enabled true
        html.enabled false
    }
}
