buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}
repositories {
    maven {
        name = "chickenbones"
        url = "http://chickenbones.net/maven/"
    }
    maven {
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven {
        name "squeek"
        url "http://www.ryanliptak.com/maven/"
    }
    ivy {
        name "MineTweaker3"
        artifactPattern "http://minetweaker3.powerofbytes.com/download/[module]-[revision].[ext]"
    }
}

apply plugin: 'forge'
apply plugin: 'curseforge'
apply plugin: 'java'
apply plugin: 'sonar-runner'
apply plugin: 'jacoco'

ext.config = parseConfig(file('build.properties'))

ext.modVersion = "${config.version.mod.major}.${config.version.mod.minor}.${config.version.mod.revis}"
version = "${config.version.minecraft}-${modVersion}"
group = "com.InfinityRaider.AgriCraft" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "AgriCraft"

minecraft {
    version = "${config.version.minecraft}-${config.version.forge}"
    runDir = "eclipse"

    replaceIn "reference/Reference.java"
    replace "@MAJOR@", config.version.mod.major
    replace "@MINOR@", config.version.mod.minor
    replace "@REVIS@", config.version.mod.revis
}

dependencies {
    // http://files.minecraftforge.net/CodeChickenLib/
    compile "codechicken:CodeChickenLib:1.7.10-1.1.1.104:dev"

    // http://chickenbones.net/maven
    compile "codechicken:CodeChickenCore:1.7.10-1.0.3.26:dev"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.3.67:dev"

    // http://mobiusstrip.eu/maven
    compile "mcp.mobius.waila:Waila:1.5.9_1.7.10:dev"

    // http://www.ryanliptak.com/maven/
    compile "applecore:AppleCore:1.7.10-1.0.2+87.f5270:api"

    compile name: 'MineTweaker3', version: "Dev-${config.version.minecraft}-${config.version.minetweaker}", ext: 'jar'

    // Test dependencies
    testCompile "junit:junit:4.12"
    testCompile "org.mockito:mockito-core:1.10.8"
    testCompile "org.powermock:powermock-module-junit4:1.6.1"
    testCompile "org.powermock:powermock-api-mockito:1.6.1"
}

allprojects {
    if (System.getenv("TRAVIS") != null) {
        def tag = System.getenv("TRAVIS_TAG");
        if (tag != null && !tag.isEmpty()) {
            project.ext.releaseType = tag.contains("SNAPSHOT") ? "alpha" : "release"
            version += tag.contains("SNAPSHOT") ? "-b${System.getenv("TRAVIS_BUILD_NUMBER")}" : ""
        } else {
            version += "-b${System.getenv("TRAVIS_BUILD_NUMBER")}"
            project.ext.releaseType = "alpha"
        }
    }
}

processResources {
    inputs.property "version", project.modVersion
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
            include 'mcmod.info'
            expand ([
                    'version': project.modVersion,
                    'mcversion': project.minecraft.version])
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

curse {
    onlyIf {
        (!System.env.TRAVIS_TAG.isEmpty() || getCommitMsg.commitMsg().contains("[cf push]")) && System.env.CFKEY != null
    }

    apiKey = System.env.CFKEY
    projectId = "225635"
    changelog = """
            See https://github.com/InfinityRaider/AgriCraft/blob/master/src/main/resources/changelog.txt
    """
    releaseType = project.hasProperty('releaseType') ? project.releaseType : ""
}

task getCommitMsg(type: Exec) {
    def commit = System.env.TRAVIS_COMMIT != null ? System.env.TRAVIS_COMMIT : ""
    commandLine "git log --format=%B -n 1 ${commit}".split(' ')
    standardOutput = new ByteArrayOutputStream()
    ext.commitMsg = {
        return standardOutput.toString()
    }
}

curse.dependsOn getCommitMsg

def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}

sourceSets {
    test {
        java {
            compileClasspath += api.output
            runtimeClasspath += api.output
        }
    }
}

task apiJar(type: Jar) {
    from sourceSets.main.allSource
    from sourceSets.main.output
    include 'com/InfinityRaider/AgriCraft/api/**/*'
    classifier = 'api'
}

build.dependsOn apiJar
